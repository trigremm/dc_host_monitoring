name: host-monitoring

services:
  prometheus:
    container_name: hm-prometheus
    build:
      context: .
      dockerfile_inline: |
        FROM prom/prometheus:latest
        COPY ./prometheus/prometheus.yml /etc/prometheus/
        USER root
        RUN mkdir -p /prometheus && \
            chown -R nobody:nobody /prometheus
        USER nobody
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    volumes:
      - ./.docker/prometheus/data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    user: nobody:nobody

  grafana:
    container_name: hm-grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./.docker/grafana/data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    user: "472" # Grafana's official user ID

  node:
    container_name: hm-node
    image: prom/node-exporter:latest
    command:
      - "--path.rootfs=/host"
    ports:
      - "9100:9100"
    volumes:
      - /:/host:ro
    restart: unless-stopped

  cadvisor:
    container_name: hm-cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "9080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3

  loki:
    container_name: hm-loki
    image: grafana/loki:2.8.2
    user: root # Run as root to ensure write permissions
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
      - ./.docker/loki/data:/loki
      - ./.docker/loki/wal:/wal # Add explicit volume for WAL directory
      - ./.docker/loki/compactor:/loki/compactor # Add explicit volume for compactor
    command: -config.file=/etc/loki/local-config.yaml -config.expand-env=true
    restart: unless-stopped

  promtail:
    container_name: hm-promtail
    image: grafana/promtail:2.8.2
    volumes:
      - /var/log:/var/log:ro
      - ./promtail/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    restart: unless-stopped
